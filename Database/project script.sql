--------------------------------------------------------
--  File created - Tuesday-January-12-2021   
--------------------------------------------------------
DROP TABLE "ACCOUNT" cascade constraints;
DROP TABLE "AREA" cascade constraints;
DROP TABLE "ATTENDANCE" cascade constraints;
DROP TABLE "CUSTOMER" cascade constraints;
DROP TABLE "CUSTOMER_LEDGER" cascade constraints;
DROP TABLE "CUSTOMER_PRODUCT_DISCOUNT" cascade constraints;
DROP TABLE "DISPATCHED_LOAD" cascade constraints;
DROP TABLE "EMPLOYEE" cascade constraints;
DROP TABLE "EMPLOYEE_PRODUCT_COMMISSION" cascade constraints;
DROP TABLE "EXPENSE" cascade constraints;
DROP TABLE "EXPENSE_RECORD" cascade constraints;
DROP TABLE "ORDERS" cascade constraints;
DROP TABLE "ORDER_DETAILS" cascade constraints;
DROP TABLE "PAYMENT_RECORD" cascade constraints;
DROP TABLE "PRODUCT" cascade constraints;
DROP TABLE "PURCHASE" cascade constraints;
DROP TABLE "PURCHASE_DETAIL" cascade constraints;
DROP TABLE "RECOVERY_RECORD" cascade constraints;
DROP TABLE "SALARY" cascade constraints;
DROP TABLE "SALE" cascade constraints;
DROP TABLE "SALE_DETAIL" cascade constraints;
DROP TABLE "SALE_EMPLOYEE" cascade constraints;
DROP TABLE "SALE_TRANSACTION" cascade constraints;
DROP TABLE "STORE" cascade constraints;
DROP TABLE "SUB_AREA" cascade constraints;
DROP TABLE "VENDOR" cascade constraints;
DROP TABLE "VENDOR_LEDGER" cascade constraints;
DROP SEQUENCE "AREA_SEQ";
DROP SEQUENCE "CUSTOMER_LEDGER_SEQ";
DROP SEQUENCE "CUSTOMER_SEQ";
DROP SEQUENCE "EMPLOYEE_SEQ";
DROP SEQUENCE "EXPENSE_SEQ";
DROP SEQUENCE "PRODUCT_SEQ";
DROP SEQUENCE "PURCHASES_SEQ";
DROP SEQUENCE "PURCHASE_SEQ";
DROP SEQUENCE "SALE_SEQ";
DROP SEQUENCE "SUB_AREA_SEQ";
DROP SEQUENCE "VENDOR_LEDGER_SEQ";
DROP SEQUENCE "VENDOR_SEQ";
--------------------------------------------------------
--  DDL for Sequence AREA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "AREA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CUSTOMER_LEDGER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "CUSTOMER_LEDGER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2281 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CUSTOMER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "CUSTOMER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 481 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMPLOYEE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "EMPLOYEE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EXPENSE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "EXPENSE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PRODUCT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PRODUCT_SEQ"  MINVALUE 11 MAXVALUE 99999999999999999999 INCREMENT BY 1 START WITH 111 CACHE 20 ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PURCHASES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PURCHASES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PURCHASE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PURCHASE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SALE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SALE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1421 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SUB_AREA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SUB_AREA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VENDOR_LEDGER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "VENDOR_LEDGER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VENDOR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "VENDOR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ACCOUNT
--------------------------------------------------------

  CREATE TABLE "ACCOUNT" 
   (	"USERNAME" VARCHAR2(30 BYTE), 
	"PASSWORD" VARCHAR2(30 BYTE), 
	"TYPE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table AREA
--------------------------------------------------------

  CREATE TABLE "AREA" 
   (	"AREA_ID" NUMBER(*,0), 
	"AREA_NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ATTENDANCE
--------------------------------------------------------

  CREATE TABLE "ATTENDANCE" 
   (	"ATTANDANCE_DATE" DATE, 
	"EMPLOYEE_ID" NUMBER(*,0), 
	"ATTENDANCE" NUMBER(*,0)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------

  CREATE TABLE "CUSTOMER" 
   (	"CUSTOMER_ID" NUMBER(*,0), 
	"CUSTOMER_NAME" VARCHAR2(50 BYTE), 
	"CONTACT_NO_1" VARCHAR2(30 BYTE), 
	"CONTACT_NO_2" VARCHAR2(30 BYTE), 
	"AREA_ID" NUMBER, 
	"SUB_AREA_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMER_LEDGER
--------------------------------------------------------

  CREATE TABLE "CUSTOMER_LEDGER" 
   (	"TRAN_DATE" DATE, 
	"CUSTOMER_ID" NUMBER, 
	"TRAN_TYPE" VARCHAR2(20 BYTE), 
	"AMOUNT" FLOAT(126), 
	"BALANCE" FLOAT(126), 
	"DESCRIPTION" VARCHAR2(100 BYTE), 
	"OPENING_BALANCE" FLOAT(126), 
	"TRAN_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMER_PRODUCT_DISCOUNT
--------------------------------------------------------

  CREATE TABLE "CUSTOMER_PRODUCT_DISCOUNT" 
   (	"CUSTOMER_ID" NUMBER, 
	"PRODUCT_ID" NUMBER, 
	"DISCOUNT_AMOUNT" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DISPATCHED_LOAD
--------------------------------------------------------

  CREATE TABLE "DISPATCHED_LOAD" 
   (	"ID" NUMBER(*,0), 
	"EMPLOYEE_ID" NUMBER(*,0), 
	"DISPATCH_DATE" DATE, 
	"SEQUENCE_NUM" NUMBER(*,0)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE
--------------------------------------------------------

  CREATE TABLE "EMPLOYEE" 
   (	"EMPLOYEE_ID" NUMBER(*,0), 
	"EMPLOYEE_NAME" VARCHAR2(30 BYTE), 
	"CNIC" VARCHAR2(15 BYTE), 
	"CONTACT_NO_1" VARCHAR2(30 BYTE), 
	"CONTACT_NO_2" VARCHAR2(30 BYTE), 
	"JOB_TYPE" VARCHAR2(10 BYTE), 
	"HIREDATE" DATE, 
	"BASIC_SALARY" NUMBER, 
	"ADDRESS" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE_PRODUCT_COMMISSION
--------------------------------------------------------

  CREATE TABLE "EMPLOYEE_PRODUCT_COMMISSION" 
   (	"EMPLOYEE_ID" NUMBER, 
	"PRODUCT_ID" NUMBER, 
	"COMMISSION" FLOAT(126)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EXPENSE
--------------------------------------------------------

  CREATE TABLE "EXPENSE" 
   (	"EXPENSE_ID" NUMBER, 
	"DESCRIPTION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EXPENSE_RECORD
--------------------------------------------------------

  CREATE TABLE "EXPENSE_RECORD" 
   (	"EXPENSE_DATE" DATE, 
	"EXPENSE_ID" NUMBER, 
	"AMOUNT" FLOAT(126), 
	"COMMENTS" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ORDERS
--------------------------------------------------------

  CREATE TABLE "ORDERS" 
   (	"OID" NUMBER(*,0), 
	"CID" NUMBER(*,0), 
	"DAY" DATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ORDER_DETAILS
--------------------------------------------------------

  CREATE TABLE "ORDER_DETAILS" 
   (	"ITID" NUMBER(*,0), 
	"OID" NUMBER(*,0), 
	"QTY" NUMBER(*,0)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PAYMENT_RECORD
--------------------------------------------------------

  CREATE TABLE "PAYMENT_RECORD" 
   (	"PURCHASE_ID" NUMBER, 
	"PAYMENT_DATE" DATE, 
	"AMOUNT" FLOAT(126)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PRODUCT
--------------------------------------------------------

  CREATE TABLE "PRODUCT" 
   (	"PRODUCT_ID" NUMBER(*,0), 
	"PRODUCT_NAME" VARCHAR2(20 BYTE), 
	"VENDOR_ID" NUMBER(*,0), 
	"SALE_PRICE" FLOAT(126), 
	"PURCHASE_PRICE" FLOAT(126), 
	"MARGIN" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PURCHASE
--------------------------------------------------------

  CREATE TABLE "PURCHASE" 
   (	"PURCHASE_ID" NUMBER(*,0), 
	"PURCHASE_DATE" DATE, 
	"VENDOR_ID" NUMBER(*,0), 
	"AMOUNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PURCHASE_DETAIL
--------------------------------------------------------

  CREATE TABLE "PURCHASE_DETAIL" 
   (	"PRODUCT_ID" NUMBER(*,0), 
	"PURCHASE_ID" NUMBER(*,0), 
	"QUANTITY" NUMBER(*,0), 
	"REPLACE" NUMBER(*,0), 
	"AMOUNT" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RECOVERY_RECORD
--------------------------------------------------------

  CREATE TABLE "RECOVERY_RECORD" 
   (	"SALE_ID" NUMBER, 
	"RECOVERY_DATE" DATE, 
	"AMOUNT" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SALARY
--------------------------------------------------------

  CREATE TABLE "SALARY" 
   (	"SALARY_DATE" DATE, 
	"EMPLOYEE_ID" NUMBER(*,0), 
	"COMMISSION" NUMBER, 
	"NET_SALARY" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SALE
--------------------------------------------------------

  CREATE TABLE "SALE" 
   (	"SALE_ID" NUMBER, 
	"CUSTOMER_ID" NUMBER, 
	"NET_DISCOUNT" FLOAT(126), 
	"NET_AMOUNT" FLOAT(126), 
	"SALE_DATE" DATE, 
	"BALANCE" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SALE_DETAIL
--------------------------------------------------------

  CREATE TABLE "SALE_DETAIL" 
   (	"SALE_ID" NUMBER, 
	"PRODUCT_ID" NUMBER, 
	"QUANTITY" NUMBER, 
	"REPLACE" NUMBER, 
	"DISCOUNT" FLOAT(126), 
	"AMOUNT" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SALE_EMPLOYEE
--------------------------------------------------------

  CREATE TABLE "SALE_EMPLOYEE" 
   (	"SALE_ID" NUMBER, 
	"EMPLOYEE_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SALE_TRANSACTION
--------------------------------------------------------

  CREATE TABLE "SALE_TRANSACTION" 
   (	"SALE_ID" NUMBER, 
	"TRAN_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table STORE
--------------------------------------------------------

  CREATE TABLE "STORE" 
   (	"PRODUCT_ID" NUMBER(*,0), 
	"CONDITION" VARCHAR2(10 BYTE), 
	"QUANTITY" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SUB_AREA
--------------------------------------------------------

  CREATE TABLE "SUB_AREA" 
   (	"SUB_AREA_ID" NUMBER, 
	"SUB_AREA_NAME" VARCHAR2(50 BYTE), 
	"AREA_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VENDOR
--------------------------------------------------------

  CREATE TABLE "VENDOR" 
   (	"VENDOR_ID" NUMBER(*,0), 
	"VENDOR_NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VENDOR_LEDGER
--------------------------------------------------------

  CREATE TABLE "VENDOR_LEDGER" 
   (	"TRAN_DATE" DATE, 
	"VENDOR_ID" NUMBER, 
	"TRAN_TYPE" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(100 BYTE), 
	"AMOUNT" FLOAT(126), 
	"BALANCE" FLOAT(126), 
	"OPENING_BALANCE" FLOAT(126), 
	"TRAN_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SALE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SALE_PK" ON "SALE" ("SALE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SUB_AREA_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUB_AREA_UK1" ON "SUB_AREA" ("AREA_ID", "SUB_AREA_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SUB_AREA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SUB_AREA_PK" ON "SUB_AREA" ("SUB_AREA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SALE_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SALE_DETAIL_PK" ON "SALE_DETAIL" ("SALE_ID", "PRODUCT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DISPATCHED_LOAD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DISPATCHED_LOAD_PK" ON "DISPATCHED_LOAD" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SALE_TRANSACTION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SALE_TRANSACTION_PK" ON "SALE_TRANSACTION" ("SALE_ID", "TRAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CUSTOMER_PRODUCT_DISCOUNTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CUSTOMER_PRODUCT_DISCOUNTS_PK" ON "CUSTOMER_PRODUCT_DISCOUNT" ("CUSTOMER_ID", "PRODUCT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CUSTOMER_LEDGER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CUSTOMER_LEDGER_PK" ON "CUSTOMER_LEDGER" ("TRAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EMPLOYEE_PRODUCT_COMMISSIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "EMPLOYEE_PRODUCT_COMMISSIO_PK" ON "EMPLOYEE_PRODUCT_COMMISSION" ("PRODUCT_ID", "EMPLOYEE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VENDOR_LEDGER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VENDOR_LEDGER_PK" ON "VENDOR_LEDGER" ("TRAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EMPLOYEE_SALE_COMMISSION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "EMPLOYEE_SALE_COMMISSION_PK" ON "SALE_EMPLOYEE" ("SALE_ID", "EMPLOYEE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AREA_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "AREA_UK1" ON "AREA" ("AREA_ID", "AREA_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EXPENSE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "EXPENSE_PK" ON "EXPENSE" ("EXPENSE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table PURCHASE
--------------------------------------------------------

  ALTER TABLE "PURCHASE" MODIFY ("PURCHASE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "PURCHASE" MODIFY ("PURCHASE_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "PURCHASE" MODIFY ("VENDOR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "PURCHASE" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "PURCHASE" ADD PRIMARY KEY ("PURCHASE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "CUSTOMER" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER" MODIFY ("CUSTOMER_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER" ADD PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "CUSTOMER" MODIFY ("AREA_ID" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER" MODIFY ("SUB_AREA_ID" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER" MODIFY ("CONTACT_NO_1" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER" MODIFY ("CONTACT_NO_2" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SALE_DETAIL
--------------------------------------------------------

  ALTER TABLE "SALE_DETAIL" ADD CONSTRAINT "SALE_DETAIL_PK" PRIMARY KEY ("SALE_ID", "PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SALE_DETAIL" MODIFY ("SALE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "SALE_DETAIL" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "SALE_DETAIL" MODIFY ("QUANTITY" NOT NULL ENABLE);
 
  ALTER TABLE "SALE_DETAIL" MODIFY ("REPLACE" NOT NULL ENABLE);
 
  ALTER TABLE "SALE_DETAIL" MODIFY ("DISCOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "SALE_DETAIL" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ATTENDANCE
--------------------------------------------------------

  ALTER TABLE "ATTENDANCE" MODIFY ("ATTANDANCE_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "ATTENDANCE" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "ATTENDANCE" ADD PRIMARY KEY ("ATTANDANCE_DATE", "EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EXPENSE_RECORD
--------------------------------------------------------

  ALTER TABLE "EXPENSE_RECORD" MODIFY ("EXPENSE_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "EXPENSE_RECORD" MODIFY ("EXPENSE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "EXPENSE_RECORD" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DISPATCHED_LOAD
--------------------------------------------------------

  ALTER TABLE "DISPATCHED_LOAD" ADD CONSTRAINT "DISPATCHED_LOAD_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "DISPATCHED_LOAD" MODIFY ("ID" NOT NULL ENABLE);
 
  ALTER TABLE "DISPATCHED_LOAD" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "DISPATCHED_LOAD" MODIFY ("DISPATCH_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CUSTOMER_LEDGER
--------------------------------------------------------

  ALTER TABLE "CUSTOMER_LEDGER" ADD CONSTRAINT "CUSTOMER_LEDGER_PK" PRIMARY KEY ("TRAN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "CUSTOMER_LEDGER" MODIFY ("TRAN_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER_LEDGER" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER_LEDGER" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER_LEDGER" MODIFY ("BALANCE" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER_LEDGER" MODIFY ("TRAN_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER_LEDGER" MODIFY ("OPENING_BALANCE" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER_LEDGER" MODIFY ("TRAN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUB_AREA
--------------------------------------------------------

  ALTER TABLE "SUB_AREA" ADD CONSTRAINT "SUB_AREA_PK" PRIMARY KEY ("SUB_AREA_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SUB_AREA" ADD CONSTRAINT "SUB_AREA_UK1" UNIQUE ("AREA_ID", "SUB_AREA_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SUB_AREA" MODIFY ("SUB_AREA_ID" NOT NULL ENABLE);
 
  ALTER TABLE "SUB_AREA" MODIFY ("SUB_AREA_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "SUB_AREA" MODIFY ("AREA_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEE_PRODUCT_COMMISSION
--------------------------------------------------------

  ALTER TABLE "EMPLOYEE_PRODUCT_COMMISSION" ADD CONSTRAINT "EMPLOYEE_PRODUCT_COMMISSIO_PK" PRIMARY KEY ("PRODUCT_ID", "EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "EMPLOYEE_PRODUCT_COMMISSION" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE_PRODUCT_COMMISSION" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE_PRODUCT_COMMISSION" MODIFY ("COMMISSION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AREA
--------------------------------------------------------

  ALTER TABLE "AREA" ADD CONSTRAINT "AREA_UK1" UNIQUE ("AREA_ID", "AREA_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "AREA" MODIFY ("AREA_ID" NOT NULL ENABLE);
 
  ALTER TABLE "AREA" MODIFY ("AREA_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "AREA" ADD PRIMARY KEY ("AREA_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VENDOR_LEDGER
--------------------------------------------------------

  ALTER TABLE "VENDOR_LEDGER" MODIFY ("TRAN_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR_LEDGER" MODIFY ("VENDOR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR_LEDGER" MODIFY ("TRAN_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR_LEDGER" MODIFY ("AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR_LEDGER" MODIFY ("BALANCE" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR_LEDGER" MODIFY ("OPENING_BALANCE" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR_LEDGER" MODIFY ("TRAN_ID" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR_LEDGER" ADD CONSTRAINT "VENDOR_LEDGER_PK" PRIMARY KEY ("TRAN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EXPENSE
--------------------------------------------------------

  ALTER TABLE "EXPENSE" ADD CONSTRAINT "EXPENSE_PK" PRIMARY KEY ("EXPENSE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "EXPENSE" MODIFY ("EXPENSE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "EXPENSE" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STORE
--------------------------------------------------------

  ALTER TABLE "STORE" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "STORE" MODIFY ("CONDITION" NOT NULL ENABLE);
 
  ALTER TABLE "STORE" MODIFY ("QUANTITY" NOT NULL ENABLE);
 
  ALTER TABLE "STORE" ADD PRIMARY KEY ("PRODUCT_ID", "CONDITION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORDER_DETAILS
--------------------------------------------------------

  ALTER TABLE "ORDER_DETAILS" MODIFY ("ITID" NOT NULL ENABLE);
 
  ALTER TABLE "ORDER_DETAILS" MODIFY ("OID" NOT NULL ENABLE);
 
  ALTER TABLE "ORDER_DETAILS" MODIFY ("QTY" NOT NULL ENABLE);
 
  ALTER TABLE "ORDER_DETAILS" ADD PRIMARY KEY ("OID", "ITID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PURCHASE_DETAIL
--------------------------------------------------------

  ALTER TABLE "PURCHASE_DETAIL" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "PURCHASE_DETAIL" MODIFY ("PURCHASE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "PURCHASE_DETAIL" MODIFY ("QUANTITY" NOT NULL ENABLE);
 
  ALTER TABLE "PURCHASE_DETAIL" MODIFY ("REPLACE" NOT NULL ENABLE);
 
  ALTER TABLE "PURCHASE_DETAIL" ADD PRIMARY KEY ("PURCHASE_ID", "PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "PURCHASE_DETAIL" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CUSTOMER_PRODUCT_DISCOUNT
--------------------------------------------------------

  ALTER TABLE "CUSTOMER_PRODUCT_DISCOUNT" ADD CONSTRAINT "CUSTOMER_PRODUCT_DISCOUNTS_PK" PRIMARY KEY ("CUSTOMER_ID", "PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "CUSTOMER_PRODUCT_DISCOUNT" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER_PRODUCT_DISCOUNT" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "CUSTOMER_PRODUCT_DISCOUNT" MODIFY ("DISCOUNT_AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SALE_TRANSACTION
--------------------------------------------------------

  ALTER TABLE "SALE_TRANSACTION" ADD CONSTRAINT "SALE_TRANSACTION_PK" PRIMARY KEY ("SALE_ID", "TRAN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SALE_TRANSACTION" MODIFY ("TRAN_ID" NOT NULL ENABLE);
 
  ALTER TABLE "SALE_TRANSACTION" MODIFY ("SALE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SALE
--------------------------------------------------------

  ALTER TABLE "SALE" ADD CONSTRAINT "SALE_PK" PRIMARY KEY ("SALE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SALE" MODIFY ("SALE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "SALE" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "SALE" MODIFY ("NET_AMOUNT" NOT NULL ENABLE);
 
  ALTER TABLE "SALE" MODIFY ("SALE_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "SALE" MODIFY ("BALANCE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SALARY
--------------------------------------------------------

  ALTER TABLE "SALARY" MODIFY ("SALARY_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "SALARY" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "SALARY" MODIFY ("NET_SALARY" NOT NULL ENABLE);
 
  ALTER TABLE "SALARY" ADD PRIMARY KEY ("SALARY_DATE", "EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SALARY" MODIFY ("COMMISSION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMPLOYEE
--------------------------------------------------------

  ALTER TABLE "EMPLOYEE" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE" MODIFY ("EMPLOYEE_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE" MODIFY ("CNIC" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE" MODIFY ("CONTACT_NO_1" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE" MODIFY ("JOB_TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE" MODIFY ("HIREDATE" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE" MODIFY ("BASIC_SALARY" NOT NULL ENABLE);
 
  ALTER TABLE "EMPLOYEE" ADD PRIMARY KEY ("EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCT
--------------------------------------------------------

  ALTER TABLE "PRODUCT" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
 
  ALTER TABLE "PRODUCT" MODIFY ("PRODUCT_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "PRODUCT" MODIFY ("VENDOR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "PRODUCT" MODIFY ("SALE_PRICE" NOT NULL ENABLE);
 
  ALTER TABLE "PRODUCT" ADD PRIMARY KEY ("PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "PRODUCT" MODIFY ("PURCHASE_PRICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VENDOR
--------------------------------------------------------

  ALTER TABLE "VENDOR" MODIFY ("VENDOR_ID" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR" MODIFY ("VENDOR_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "VENDOR" ADD PRIMARY KEY ("VENDOR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SALE_EMPLOYEE
--------------------------------------------------------

  ALTER TABLE "SALE_EMPLOYEE" ADD CONSTRAINT "EMPLOYEE_SALE_COMMISSION_PK" PRIMARY KEY ("SALE_ID", "EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SALE_EMPLOYEE" MODIFY ("SALE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "SALE_EMPLOYEE" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RECOVERY_RECORD
--------------------------------------------------------

  ALTER TABLE "RECOVERY_RECORD" MODIFY ("SALE_ID" NOT NULL ENABLE);
 
  ALTER TABLE "RECOVERY_RECORD" MODIFY ("RECOVERY_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "RECOVERY_RECORD" MODIFY ("AMOUNT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORDERS
--------------------------------------------------------

  ALTER TABLE "ORDERS" MODIFY ("OID" NOT NULL ENABLE);
 
  ALTER TABLE "ORDERS" MODIFY ("CID" NOT NULL ENABLE);
 
  ALTER TABLE "ORDERS" MODIFY ("DAY" NOT NULL ENABLE);
 
  ALTER TABLE "ORDERS" ADD PRIMARY KEY ("OID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ACCOUNT
--------------------------------------------------------

  ALTER TABLE "ACCOUNT" MODIFY ("USERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "ACCOUNT" MODIFY ("PASSWORD" NOT NULL ENABLE);
 
  ALTER TABLE "ACCOUNT" MODIFY ("TYPE" NOT NULL ENABLE);
 
  ALTER TABLE "ACCOUNT" ADD PRIMARY KEY ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ATTENDANCE
--------------------------------------------------------

  ALTER TABLE "ATTENDANCE" ADD FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "EMPLOYEE" ("EMPLOYEE_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "CUSTOMER" ADD CONSTRAINT "CUSTOMER_FK1" FOREIGN KEY ("AREA_ID")
	  REFERENCES "AREA" ("AREA_ID") ENABLE;
 
  ALTER TABLE "CUSTOMER" ADD CONSTRAINT "CUSTOMER_FK2" FOREIGN KEY ("SUB_AREA_ID")
	  REFERENCES "SUB_AREA" ("SUB_AREA_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CUSTOMER_LEDGER
--------------------------------------------------------

  ALTER TABLE "CUSTOMER_LEDGER" ADD CONSTRAINT "CUSTOMER_LEDGER_FK1" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CUSTOMER_PRODUCT_DISCOUNT
--------------------------------------------------------

  ALTER TABLE "CUSTOMER_PRODUCT_DISCOUNT" ADD CONSTRAINT "CUSTOMER_PRODUCT_DISCOUNT_FK1" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "CUSTOMER_PRODUCT_DISCOUNT" ADD CONSTRAINT "CUSTOMER_PRODUCT_DISCOUNT_FK2" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "PRODUCT" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLOYEE_PRODUCT_COMMISSION
--------------------------------------------------------

  ALTER TABLE "EMPLOYEE_PRODUCT_COMMISSION" ADD CONSTRAINT "EMPLOYEE_PRODUCT_COMMISSI_FK1" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "EMPLOYEE" ("EMPLOYEE_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "EMPLOYEE_PRODUCT_COMMISSION" ADD CONSTRAINT "EMPLOYEE_PRODUCT_COMMISSI_FK2" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "PRODUCT" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EXPENSE_RECORD
--------------------------------------------------------

  ALTER TABLE "EXPENSE_RECORD" ADD CONSTRAINT "EXPENSE_RECORD_FK1" FOREIGN KEY ("EXPENSE_ID")
	  REFERENCES "EXPENSE" ("EXPENSE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDERS
--------------------------------------------------------

  ALTER TABLE "ORDERS" ADD FOREIGN KEY ("CID")
	  REFERENCES "CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDER_DETAILS
--------------------------------------------------------

  ALTER TABLE "ORDER_DETAILS" ADD FOREIGN KEY ("OID")
	  REFERENCES "ORDERS" ("OID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "ORDER_DETAILS" ADD FOREIGN KEY ("ITID")
	  REFERENCES "PRODUCT" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PAYMENT_RECORD
--------------------------------------------------------

  ALTER TABLE "PAYMENT_RECORD" ADD CONSTRAINT "PAYMENT_RECORD_FK1" FOREIGN KEY ("PURCHASE_ID")
	  REFERENCES "PURCHASE" ("PURCHASE_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRODUCT
--------------------------------------------------------

  ALTER TABLE "PRODUCT" ADD FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "VENDOR" ("VENDOR_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PURCHASE
--------------------------------------------------------

  ALTER TABLE "PURCHASE" ADD FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "VENDOR" ("VENDOR_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PURCHASE_DETAIL
--------------------------------------------------------

  ALTER TABLE "PURCHASE_DETAIL" ADD FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "PRODUCT" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "PURCHASE_DETAIL" ADD FOREIGN KEY ("PURCHASE_ID")
	  REFERENCES "PURCHASE" ("PURCHASE_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RECOVERY_RECORD
--------------------------------------------------------

  ALTER TABLE "RECOVERY_RECORD" ADD CONSTRAINT "RECOVERY_RECORD_FK1" FOREIGN KEY ("SALE_ID")
	  REFERENCES "SALE" ("SALE_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALARY
--------------------------------------------------------

  ALTER TABLE "SALARY" ADD FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "EMPLOYEE" ("EMPLOYEE_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALE
--------------------------------------------------------

  ALTER TABLE "SALE" ADD CONSTRAINT "SALE_FK1" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "CUSTOMER" ("CUSTOMER_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALE_DETAIL
--------------------------------------------------------

  ALTER TABLE "SALE_DETAIL" ADD CONSTRAINT "SALE_DETAIL_FK1" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "PRODUCT" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "SALE_DETAIL" ADD CONSTRAINT "SALE_DETAIL_FK2" FOREIGN KEY ("SALE_ID")
	  REFERENCES "SALE" ("SALE_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALE_EMPLOYEE
--------------------------------------------------------

  ALTER TABLE "SALE_EMPLOYEE" ADD CONSTRAINT "EMPLOYEE_SALE_COMMISSION_FK1" FOREIGN KEY ("SALE_ID")
	  REFERENCES "SALE" ("SALE_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "SALE_EMPLOYEE" ADD CONSTRAINT "EMPLOYEE_SALE_COMMISSION_FK2" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "EMPLOYEE" ("EMPLOYEE_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STORE
--------------------------------------------------------

  ALTER TABLE "STORE" ADD FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "PRODUCT" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUB_AREA
--------------------------------------------------------

  ALTER TABLE "SUB_AREA" ADD CONSTRAINT "SUB_AREA_FK1" FOREIGN KEY ("AREA_ID")
	  REFERENCES "AREA" ("AREA_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VENDOR_LEDGER
--------------------------------------------------------

  ALTER TABLE "VENDOR_LEDGER" ADD CONSTRAINT "VENDOR_LEDGER_FK1" FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "VENDOR" ("VENDOR_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  DDL for Trigger AREA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "AREA_TRG" 
BEFORE INSERT ON AREA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.AREA_ID IS NULL THEN
      SELECT AREA_SEQ.NEXTVAL INTO :NEW.AREA_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "AREA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CUSTOMER_LEDGER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "CUSTOMER_LEDGER_TRG" 
BEFORE INSERT ON CUSTOMER_LEDGER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT CUSTOMER_LEDGER_SEQ.NEXTVAL INTO :NEW.TRAN_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "CUSTOMER_LEDGER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CUSTOMER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "CUSTOMER_TRG" 
BEFORE INSERT ON CUSTOMER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.CUSTOMER_ID IS NULL THEN
      SELECT CUSTOMER_SEQ.NEXTVAL INTO :NEW.CUSTOMER_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "CUSTOMER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "EMPLOYEE_TRG" 
BEFORE INSERT ON EMPLOYEE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.EMPLOYEE_ID IS NULL THEN
      SELECT EMPLOYEE_SEQ.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "EMPLOYEE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EXPENSE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "EXPENSE_TRG" 
BEFORE INSERT ON EXPENSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.EXPENSE_ID IS NULL THEN
      SELECT EXPENSE_SEQ.NEXTVAL INTO :NEW.EXPENSE_ID FROM SYS.DUAL;
    END IF;
    IF INSERTING AND :NEW.DESCRIPTION IS NULL THEN
      SELECT EXPENSE_SEQ.NEXTVAL INTO :NEW.DESCRIPTION FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "EXPENSE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INITIALIZEPRODUCTSTORE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "INITIALIZEPRODUCTSTORE" 
AFTER INSERT ON PRODUCT FOR EACH ROW
BEGIN
  INSERT INTO STORE (PRODUCT_ID , CONDITION , QUANTITY) VALUES ( :NEW.PRODUCT_ID , 'FRESH' , 0);
  INSERT INTO STORE (PRODUCT_ID , CONDITION , QUANTITY) VALUES ( :NEW.PRODUCT_ID , 'DAMAGE' , 0);
END;
/
ALTER TRIGGER "INITIALIZEPRODUCTSTORE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PRODUCT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PRODUCT_TRG" 
BEFORE INSERT ON PRODUCT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PRODUCT_ID IS NULL THEN
      SELECT PRODUCT_SEQ.NEXTVAL INTO :NEW.PRODUCT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "PRODUCT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PURCHASES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PURCHASES_TRG" 
BEFORE INSERT ON PURCHASE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "PURCHASES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PURCHASE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PURCHASE_TRG" 
BEFORE INSERT ON PURCHASE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PURCHASE_ID IS NULL THEN
      SELECT PURCHASE_SEQ.NEXTVAL INTO :NEW.PURCHASE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "PURCHASE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SALE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SALE_TRG" 
BEFORE INSERT ON SALE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SALE_ID IS NULL THEN
      SELECT SALE_SEQ.NEXTVAL INTO :NEW.SALE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SALE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SUB_AREA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SUB_AREA_TRG" 
BEFORE INSERT ON SUB_AREA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SUB_AREA_ID IS NULL THEN
      SELECT SUB_AREA_SEQ.NEXTVAL INTO :NEW.SUB_AREA_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SUB_AREA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_LEDGER_FOR_PURCHASE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_LEDGER_FOR_PURCHASE" 
AFTER INSERT ON PURCHASE FOR EACH ROW
DECLARE

  openingBalance vendor_ledger.opening_balance%TYPE;
  numberOfRows number;
  
BEGIN
  SELECT COUNT(TRAN_ID) INTO numberOfRows FROM VENDOR_LEDGER WHERE VENDOR_ID = :NEW.VENDOR_ID;

  if numberOfRows < 1 then
    openingBalance := 0;
  else
    SELECT BALANCE 
    INTO openingBalance 
    FROM VENDOR_LEDGER 
    WHERE TRAN_ID = (SELECT MAX(TRAN_ID) FROM VENDOR_LEDGER WHERE VENDOR_ID = :NEW.VENDOR_ID);
  end if;
  
  
  INSERT INTO VENDOR_LEDGER (TRAN_DATE , VENDOR_ID , TRAN_TYPE , AMOUNT , BALANCE , DESCRIPTION , OPENING_BALANCE)
  VALUES (:NEW.PURCHASE_DATE , :NEW.VENDOR_ID , 'CREDIT' , :NEW.AMOUNT , 
  (openingBalance + :NEW.AMOUNT) , 'product purchased' , openingBalance);
END;
/
ALTER TRIGGER "UPDATE_LEDGER_FOR_PURCHASE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_LEDGER_FOR_RECOVERY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_LEDGER_FOR_RECOVERY" 
AFTER INSERT ON RECOVERY_RECORD FOR EACH ROW
DECLARE

newCustomerID customer_ledger.customer_id%TYPE;
openingBalance customer_ledger.opening_balance%TYPE;
 numberOfRows number;
  
BEGIN
  SELECT CUSTOMER_ID INTO newCustomerID FROM SALE WHERE SALE_ID = :NEW.SALE_ID;
    if numberOfRows < 1 then
    openingBalance := 0;
  else
    SELECT BALANCE 
    INTO openingBalance 
    FROM CUSTOMER_LEDGER 
    WHERE TRAN_ID = (SELECT MAX(TRAN_ID) FROM CUSTOMER_LEDGER WHERE CUSTOMER_ID = newCustomerID);
  end if;
  
    INSERT INTO CUSTOMER_LEDGER (TRAN_DATE , CUSTOMER_ID , TRAN_TYPE , AMOUNT , BALANCE , DESCRIPTION , OPENING_BALANCE)
  VALUES (:NEW.RECOVERY_DATE , newCustomerID , 'CREDIT' , :NEW.AMOUNT , 
  (openingBalance - :NEW.AMOUNT) , 'Amount recovered' , openingBalance);
END;
/
ALTER TRIGGER "UPDATE_LEDGER_FOR_RECOVERY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_LEDGER_FOR_SALE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_LEDGER_FOR_SALE" 
AFTER INSERT ON SALE FOR EACH ROW
DECLARE
  
  openingBalance customer_ledger.opening_balance%TYPE;
  numberOfRows number;
  tranID number;
  
BEGIN
  SELECT COUNT(TRAN_ID) INTO numberOfRows FROM CUSTOMER_LEDGER WHERE CUSTOMER_ID = :NEW.CUSTOMER_ID;

  if numberOfRows < 1 then
    openingBalance := 0;
  else
    SELECT BALANCE 
    INTO openingBalance 
    FROM CUSTOMER_LEDGER 
    WHERE TRAN_ID = (SELECT MAX(TRAN_ID) FROM CUSTOMER_LEDGER WHERE CUSTOMER_ID = :NEW.CUSTOMER_ID);
  end if;
  
  
  INSERT INTO CUSTOMER_LEDGER (TRAN_DATE , CUSTOMER_ID , TRAN_TYPE , AMOUNT , BALANCE , DESCRIPTION , OPENING_BALANCE)
  VALUES (:NEW.SALE_DATE , :NEW.CUSTOMER_ID , 'DEBIT' , :NEW.BALANCE , 
  (openingBalance + :NEW.BALANCE) , 'product sold' , openingBalance);
  
  SELECT TRAN_ID INTO tranID FROM CUSTOMER_LEDGER WHERE TRAN_ID = (SELECT MAX(TRAN_ID) FROM CUSTOMER_LEDGER);
  
  INSERT INTO SALE_TRANSACTION (SALE_ID , TRAN_ID) VALUES ( :NEW.SALE_ID , tranID );
  
  
END;
/
ALTER TRIGGER "UPDATE_LEDGER_FOR_SALE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_LEDGER_FOR_SALE_DELETE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_LEDGER_FOR_SALE_DELETE" 
AFTER DELETE ON SALE FOR EACH ROW
DECLARE

 tranID number;
 a number;
 customerID number;
 tranAmount customer_ledger.amount%type;
 tranType VARCHAR(20);  
 firstTranID number;
 lastTranID number;

BEGIN

 SELECT TRAN_ID INTO tranID FROM SALE_TRANSACTION WHERE SALE_ID = :OLD.SALE_ID;
 
 SELECT DISTINCT CUSTOMER_ID INTO customerID FROM CUSTOMER_LEDGER WHERE TRAN_ID = tranID;
 SELECT AMOUNT INTO tranAmount FROM CUSTOMER_LEDGER WHERE TRAN_ID = tranID;
 SELECT TRAN_TYPE INTO tranType FROM CUSTOMER_LEDGER WHERE TRAN_ID = tranID;
   
  
    IF tranType = 'DEBIT' THEN
        UPDATE CUSTOMER_LEDGER SET BALANCE = BALANCE - tranAmount , OPENING_BALANCE =  OPENING_BALANCE - tranAmount
       WHERE TRAN_ID > tranID AND CUSTOMER_ID = :OLD.CUSTOMER_ID;
   ELSIF tranType = 'CREDIT' THEN
       UPDATE CUSTOMER_LEDGER SET BALANCE = BALANCE + tranAmount , OPENING_BALANCE =  OPENING_BALANCE + tranAmount
       WHERE TRAN_ID > tranID AND CUSTOMER_ID = :OLD.CUSTOMER_ID;
    END IF;
  
  DELETE FROM CUSTOMER_LEDGER WHERE TRAN_ID = tranID;
  DELETE FROM SALE_TRANSACTION WHERE TRAN_ID = tranID;
 
END;
/
ALTER TRIGGER "UPDATE_LEDGER_FOR_SALE_DELETE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_SALE_BALANCE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_SALE_BALANCE" 
AFTER INSERT ON RECOVERY_RECORD FOR EACH ROW
BEGIN
  UPDATE SALE SET BALANCE = BALANCE - :NEW.AMOUNT WHERE SALE_ID = :NEW.SALE_ID;
END;
/
ALTER TRIGGER "UPDATE_SALE_BALANCE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_STORE_FOR_PURCHASE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_STORE_FOR_PURCHASE" 
AFTER INSERT ON PURCHASE_DETAIL FOR EACH ROW
BEGIN
  
  UPDATE STORE SET QUANTITY = QUANTITY + (:NEW.QUANTITY + :NEW.REPLACE) WHERE CONDITION = 'FRESH' AND PRODUCT_ID = :NEW.PRODUCT_ID;
  UPDATE STORE SET QUANTITY = (QUANTITY - :NEW.REPLACE) WHERE CONDITION = 'DAMAGE' AND PRODUCT_ID = :NEW.PRODUCT_ID;
  
END;
/
ALTER TRIGGER "UPDATE_STORE_FOR_PURCHASE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_STORE_FOR_PURCHASE_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_STORE_FOR_PURCHASE_DEL" 
AFTER DELETE ON PURCHASE_DETAIL FOR EACH ROW
BEGIN
   UPDATE STORE SET QUANTITY = QUANTITY - :OLD.QUANTITY WHERE CONDITION = 'FRESH';
  UPDATE STORE SET QUANTITY = QUANTITY + :OLD.REPLACE WHERE CONDITION = 'DAMAGE';
END;
/
ALTER TRIGGER "UPDATE_STORE_FOR_PURCHASE_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_STORE_FOR_SALE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_STORE_FOR_SALE" 
AFTER INSERT ON SALE_DETAIL FOR EACH ROW
BEGIN

  UPDATE STORE SET QUANTITY = QUANTITY - (:NEW.QUANTITY + :NEW.REPLACE) WHERE CONDITION = 'FRESH' AND PRODUCT_ID = :NEW.PRODUCT_ID;
  UPDATE STORE SET QUANTITY = (QUANTITY + :NEW.REPLACE) WHERE CONDITION = 'DAMAGE' AND PRODUCT_ID = :NEW.PRODUCT_ID;
  
END;
/
ALTER TRIGGER "UPDATE_STORE_FOR_SALE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_STORE_FOR_SALE_DELETE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "UPDATE_STORE_FOR_SALE_DELETE" 
AFTER DELETE ON SALE_DETAIL FOR EACH ROW
BEGIN
  UPDATE STORE SET QUANTITY = QUANTITY + :OLD.QUANTITY WHERE CONDITION = 'FRESH';
  UPDATE STORE SET QUANTITY = QUANTITY - :OLD.REPLACE WHERE CONDITION = 'DAMAGE';
END;
/
ALTER TRIGGER "UPDATE_STORE_FOR_SALE_DELETE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VENDOR_LEDGER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "VENDOR_LEDGER_TRG" 
BEFORE INSERT ON VENDOR_LEDGER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT VENDOR_LEDGER_SEQ.NEXTVAL INTO :NEW.TRAN_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "VENDOR_LEDGER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VENDOR_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "VENDOR_TRG" 
BEFORE INSERT ON VENDOR 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.VENDOR_ID IS NULL THEN
      SELECT VENDOR_SEQ.NEXTVAL INTO :NEW.VENDOR_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "VENDOR_TRG" ENABLE;
