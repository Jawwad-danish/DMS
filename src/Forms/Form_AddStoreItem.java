/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import DbConnPkg.DbConnMgr;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author DanBros
 */
public class Form_AddStoreItem extends javax.swing.JFrame {

    JTable Table;
    
    public Form_AddStoreItem() {
        initComponents();
        this.ItemCbox.setEditable(true);
        this.wgtCbox.setEditable(true);
        AutoCompleteDecorator.decorate(this.ItemCbox);
        AutoCompleteDecorator.decorate(this.wgtCbox);
        Connection conn = DbConnMgr.getConnection();
        Statement stmt;
        ResultSet rs;
        try{
                 stmt = conn.createStatement();
                 rs = stmt.executeQuery("select distinct itname from items");
                
                 while(rs.next()){
                     this.ItemCbox.addItem(rs.getString(1));
                 } 
                 
                 stmt = conn.createStatement();
                 rs = stmt.executeQuery("select distinct wgt from items");
                
                 while(rs.next()){
                     this.wgtCbox.addItem(rs.getString(1));
                 }
        }catch(Exception e)
        {  
            
            JOptionPane.showMessageDialog(null, e);
        }
    }
    public Form_AddStoreItem(JTable j) {
        initComponents();
        this.Table = j;
         this.ItemCbox.setEditable(true);
        this.wgtCbox.setEditable(true);
        AutoCompleteDecorator.decorate(this.ItemCbox);
        AutoCompleteDecorator.decorate(this.wgtCbox);
        Connection conn = DbConnMgr.getConnection();
        Statement stmt;
        ResultSet rs;
        try{
                 stmt = conn.createStatement();
                 rs = stmt.executeQuery("select distinct itname from items");
                
                 while(rs.next()){
                     this.ItemCbox.addItem(rs.getString(1));
                 }
                 
                 stmt = conn.createStatement();
                 rs = stmt.executeQuery("select distinct wgt from items");
                
                 while(rs.next()){
                     this.wgtCbox.addItem(rs.getString(1));
                 }
        }catch(Exception e)
        {  
            
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ItemCbox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        condCbox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        QtyField = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        wgtCbox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        Add = new javax.swing.JButton();
        subtract = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Enter Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Item");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Condition");

        condCbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fresh", "Damage" }));
        condCbox.setSelectedIndex(-1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Quantity");

        QtyField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Wgt");

        wgtCbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wgtCboxActionPerformed(evt);
            }
        });

        jLabel5.setText("KG");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ItemCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QtyField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(condCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(wgtCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ItemCbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wgtCbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(condCbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QtyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30))
        );

        Add.setBackground(new java.awt.Color(0, 102, 0));
        Add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Add.setForeground(new java.awt.Color(255, 255, 255));
        Add.setText("add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        subtract.setBackground(new java.awt.Color(0, 102, 0));
        subtract.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        subtract.setForeground(new java.awt.Color(255, 255, 255));
        subtract.setText("subract");
        subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(subtract, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(Add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        Connection conn = DbConnMgr.getConnection();
        Statement stmt;
        PreparedStatement pstmt;
        ResultSet rs;
        int count = 0;
        String itid;
        if(ItemCbox.getSelectedItem() != null && wgtCbox.getSelectedItem() != null && condCbox.getSelectedItem() != null && !QtyField.getText().equals("") )
        {
            try{
               
        stmt = conn.createStatement();
        rs = stmt.executeQuery("select itid from items where itname = '"+this.ItemCbox.getSelectedItem()+"' and wgt = "+this.wgtCbox.getSelectedItem());
        rs.next();
        itid = rs.getString("itid");
        
        rs = stmt.executeQuery("select * from store where itid = "+itid+" and cond = '"+this.condCbox.getSelectedItem().toString()+"'");
        
        if(!rs.next())
            stmt.executeUpdate("insert into store values("+itid+" , '"+this.condCbox.getSelectedItem().toString()+"' , "+this.QtyField.getText()+")");
        else
            stmt.executeUpdate("update store set qty = qty + "+this.QtyField.getText()+" where itid = "+itid+" and cond = '"+this.condCbox.getSelectedItem().toString()+"'");
        
     
             try{
                   pstmt = conn.prepareStatement("create view store_view as select i.itname as \"Brand\" ,  i.wgt as \"wgt\" , s.cond as \"Condition\" , s.Qty \"Quantity\" from items i , store s where i.itid = s.itid order by i.itname asc");
                   pstmt.executeQuery();
                   pstmt = conn.prepareStatement("commit");
                   pstmt.executeQuery();
                   stmt = conn.createStatement();
                   rs = stmt.executeQuery("select * from store_view");
                   this.Table.setModel(DbUtils.resultSetToTableModel(rs));
                   pstmt = conn.prepareStatement("drop view store_view");
                   pstmt.executeQuery();
              }catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);
              }
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
            
        }
        else
            JOptionPane.showMessageDialog(null, "Incomplete Details!");
        
       
    }//GEN-LAST:event_AddActionPerformed

    private void wgtCboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wgtCboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wgtCboxActionPerformed

    private void subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractActionPerformed
 Connection conn = DbConnMgr.getConnection();
        Statement stmt;
        PreparedStatement pstmt;
        ResultSet rs;
        int count = 0;
        String itid;
        if(ItemCbox.getSelectedItem() != null && wgtCbox.getSelectedItem() != null && condCbox.getSelectedItem() != null && !QtyField.getText().equals(""))
        {
            try{
               
        stmt = conn.createStatement();
        rs = stmt.executeQuery("select itid from items where itname = '"+this.ItemCbox.getSelectedItem()+"' and wgt = "+this.wgtCbox.getSelectedItem());
        rs.next();
        itid = rs.getString("itid");
        
        rs = stmt.executeQuery("select * from store where itid = "+itid+" and cond = '"+this.condCbox.getSelectedItem().toString()+"'");
        
        if(!rs.next())
            JOptionPane.showMessageDialog(null,"Item not exist in the stock!");
        else if((rs.getInt("qty")-Integer.parseInt(this.QtyField.getText())) > -1)
            stmt.executeUpdate("update store set qty = qty - "+this.QtyField.getText()+" where itid = "+itid+" and cond = '"+this.condCbox.getSelectedItem().toString()+"'");
        else
             JOptionPane.showMessageDialog(null,"Quantity out of stock!");
     
             try{
                   pstmt = conn.prepareStatement("create view store_view as select i.itname as \"Brand\" ,  i.wgt as \"wgt\" , s.cond as \"Condition\" , s.Qty \"Quantity\" from items i , store s where i.itid = s.itid order by i.itname asc");
                   pstmt.executeQuery();
                   pstmt = conn.prepareStatement("commit");
                   pstmt.executeQuery();
                   stmt = conn.createStatement();
                   rs = stmt.executeQuery("select * from store_view");
                   this.Table.setModel(DbUtils.resultSetToTableModel(rs));
                   pstmt = conn.prepareStatement("drop view store_view");
                   pstmt.executeQuery();
              }catch(Exception e){
                    JOptionPane.showMessageDialog(null,e);
              }
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
           
        }
            else
            JOptionPane.showMessageDialog(null, "Incomplete Details!");
    }//GEN-LAST:event_subtractActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_AddStoreItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_AddStoreItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_AddStoreItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_AddStoreItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_AddStoreItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JComboBox<String> ItemCbox;
    private javax.swing.JFormattedTextField QtyField;
    private javax.swing.JComboBox<String> condCbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton subtract;
    private javax.swing.JComboBox<String> wgtCbox;
    // End of variables declaration//GEN-END:variables
}
